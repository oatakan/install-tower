- name: set targets from list
  set_fact:
    targets: "{{ targets|default([]) + [ {'id': hostvars[item].ec2_id, 'port': 443 } ] }}"
    with_items: "{{ play_hosts }}"

- debug:
    var: targets

- name: create elb target group https
  elb_target_group:
    name: "{{ ec2_name_prefix }}-{{ app_name }}-elb-target-group-https"
    protocol: https
    port: 443
    region: "{{ ec2_region }}"
    vpc_id: "{{ ec2_vpc_id }}"
    health_check_path: /
    successful_response_codes: "200,250-260"
    targets: "{{ targets }}"
    state: present
    tags:
      name: "{{ ec2_name_prefix }}-{{ app_name }}-elb-target-group-https"
      role: "{{ role_name }}"
      app: "{{ app_name }}"
  delegate_to: 127.0.0.1

- name: create elb target group http
  elb_target_group:
    name: "{{ ec2_name_prefix }}-{{ app_name }}-elb-target-group-http"
    protocol: http
    port: 80
    region: "{{ ec2_region }}"
    vpc_id: "{{ ec2_vpc_id }}"
    health_check_path: /
    successful_response_codes: "200,250-260"
    targets: "{{ targets }}"
    state: present
    tags:
      name: "{{ ec2_name_prefix }}-{{ app_name }}-elb-target-group-http"
      role: "{{ role_name }}"
      app: "{{ app_name }}"
  delegate_to: 127.0.0.1

- name: ceate ec2 security group
  ec2_group:
    name: "{{ ec2_name_prefix }}-{{ app_name }}-elb-security-group"
    description: allow http and https
    region: "{{ ec2_region }}"
    vpc_id: "{{ ec2_vpc_id }}"
    rules:
      - proto: tcp
        from_port: 80
        to_port: 80
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 443
        to_port: 443
        cidr_ip: 0.0.0.0/0
    rules_egress:
      - proto: all
        cidr_ip: 0.0.0.0/0
    tags:
      name: "{{ ec2_name_prefix }}-{{ app_name }}-elb-target-group"
      role: "{{ role_name }}"
      app: "{{ app_name }}"
  delegate_to: 127.0.0.1

- name: create elb application lb
  elb_application_lb:
    name: "{{ ec2_name_prefix }}-{{ app_name }}-elb-lb"
    security_groups:
      - "{{ ec2_name_prefix }}-{{ app_name }}-elb-security-group"
    subnets:
      - "{{ ec2_vpc_subnet_id }}"
    listeners:
      - Protocol: HTTP
        Port: 80
        # The security policy that defines which ciphers and protocols are supported. The default is the current predefined security policy.
        SslPolicy: ELBSecurityPolicy-2015-05
        Certificates: # The ARN of the certificate (only one certficate ARN should be provided)
          - CertificateArn: arn:aws:iam::12345678987:server-certificate/test.domain.com
        DefaultActions:
          - Type: forward # Required. Only 'forward' is accepted at this time
            TargetGroupName: "{{ ec2_name_prefix }}-{{ app_name }}-elb-target-group-http"
      - Protocol: HTTPS
        Port: 443
        # The security policy that defines which ciphers and protocols are supported. The default is the current predefined security policy.
        SslPolicy: ELBSecurityPolicy-2015-05
        Certificates: # The ARN of the certificate (only one certficate ARN should be provided)
          - CertificateArn: arn:aws:iam::12345678987:server-certificate/test.domain.com
        DefaultActions:
          - Type: forward # Required. Only 'forward' is accepted at this time
            TargetGroupName: "{{ ec2_name_prefix }}-{{ app_name }}-elb-target-group-https"
    state: present
  delegate_to: 127.0.0.1