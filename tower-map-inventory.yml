- name: map tower installation inventory
  hosts: localhost
  connection: local
  gather_facts: false
  vars:
    inventory_name: aws-tower-install-inventory
    inventory_top_level_group_name: tower_install
    organization: demo
    inventory_groups:
      - name: tower
        mapped_group: tag_role_tower
#       - name: database
#         mapped_group: tag_role_towerdb
#       - name: instance_group_east
#         mapped_group: tag_role_tower_east
#       - name: isolated_group_remote
#         mapped_group: tag_role_isolated_remote
#       - name: isolated_group_remote
#         mapped_group: tag_role_isolated_remote
  tasks:
    - name: ensure inventory exists
      awx.awx.tower_inventory:
        tower_host: "{{ lookup('env', 'TOWER_HOST') | default('localhost') }}"
        tower_username: "{{ lookup('env', 'TOWER_USERNAME') }}"
        tower_password: "{{ lookup('env', 'TOWER_PASSWORD') }}"
        validate_certs: no
        name: "{{ inventory_name }}"
        organization: "{{ organization }}"
        state: present

    - name: ensure dynamic groups are added
      awx.awx.tower_group:
        tower_host: "{{ lookup('env', 'TOWER_HOST') | default('localhost') }}"
        tower_username: "{{ lookup('env', 'TOWER_USERNAME') }}"
        tower_password: "{{ lookup('env', 'TOWER_PASSWORD') }}"
        validate_certs: no
        name: "{{ item.name }}"
        inventory: "{{ inventory_name }}"
        children:
          - "{{ item.mapped_group }}"
      loop: "{{ inventory_groups }}"

    - name: ensure top level static group exist
      awx.awx.tower_group:
        tower_host: "{{ lookup('env', 'TOWER_HOST') | default('localhost') }}"
        tower_username: "{{ lookup('env', 'TOWER_USERNAME') }}"
        tower_password: "{{ lookup('env', 'TOWER_PASSWORD') }}"
        validate_certs: no
        name: "{{ inventory_top_level_group_name }}"
        inventory: "{{ inventory_name }}"
        children: "{{ inventory_groups | map(attribute='name') | list }}"